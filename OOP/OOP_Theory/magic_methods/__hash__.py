"""
magic methods = dunder methods (Double UNDERscore) -
це спеціальні методи, які починаються і закінчуються на два нижніх підкреслення.
Ці методи мають певний функціонал і викликаються всередині класу у певний момент.
"""
class Point1:
    pass

p1 = Point1()
print(isinstance(p1, object))
# True
p2 = Point1()

"""
об"єкти в пайтоні можна порівнювати: 
print(p1 == p2)  --> видасть False, бо об"єкти в пайтоні порівнюються по їх id
"""
print("p1 id:", id(p1))   # p1 id: 140003575843184
print("p2 id:", id(p2))   # p2 id: 140003575542832
print(p1 == p2)
# False

"""
hash() - ф-ія, яка приймає об"єкт і перетворює його на числове значення, 
це перетворення одностороннє і назад перетворити отримане числове значення у об"єкт неможливо
"""
print("p1 hash:", hash(p1))
# p1 hash: 8735491613847
print("p2 hash:", hash(p2))
# p2 hash: 8735491651353


class Point:
    def __init__(self, x, y):
        self.x = x
        self.y = y

    def __eq__(self, other):
        return isinstance(other, Point) and self.x == other.x and self.y == other.y


pp1 = Point(1, 2)
print("pp1 id:", id(pp1))
pp2 = Point(1, 2)
print("pp2 id:", id(pp2))
print(pp1 == pp2)   # True

"""
коли ми перевизначаємо метод __eq__, то у нього злітає метод __hash__, 
бо метод __hash__ визначався від id і ф-ія __eq__ теж порівнювала по id
і коли ми перевизначаємо __eq__, то і __hash__ теж потрібно перевизначити, 
бо __hash__ ф-ія для однакових значень дасть однаковий hash

За замовчуванням (хеш рахувався по ід):
два об"єкти однакові, якщо в них однакова ід, а якщо в них однакові ід, то і хеші теж однакові

Якщо ми змінюємо/перевизначаємо порівняння (кажемо, що об"єкти тепер однакові на по ід, а по ін алгоритму, який ми визначаємо в методі __eq__), 
тоді пайтон не розумію тепер як визначати hash об"єкту, бо він визначав hash по ід, але тепер однаковість ід НЕ є ознакою однаковості об"єктів
і тому тепер наш об"єкт стає unhashable, і щоб об№єкт знову став hashable, потрібно перевизначити __hash__
 """
print("pp1 hash:", hash(pp1))   # TypeError: unhashable type: 'Point'
print("pp2 hash:", hash(pp2))   # TypeError: unhashable type: 'Point'


"""
hash() можна знайти у НЕзмінюваних об"єктів:
hash-абельні об"єкти використовуються в словниках у якості ключів, і в множинах 
"""

