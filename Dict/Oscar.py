# "Премия Оскар"
# Представьте, что мы с вами сами можем решать кому и сколько статуэток Оскара уйдет
# (Лео бы тогда давно купался в этих статуэтках).
#
# Ваша задача написать программу, которая находит информацию,
# кто из актеров получил наибольшее и наименьшее количество статуэток.
#
# Входные данные
# Программа принимать на вход в первой строке натуральное число n - количество вручаемых сегодня наград.
# И затем в n следующих строках вводятся имена актеров - победителей.
# Выходные данные
# Нужно вывести в  отдельных строках имена актеров набравших наибольшее и наименьшее количество статуэток
# и через запятую их количество.
# Гарантируется, что всегда будет только один человек, набравших наибольшее и наименьшее количество статуэток.
#
# Sample Input:
# 6
# Леонардо Ди Каприо
# Джонни Депп
# Леонардо Ди Каприо
# Леонардо Ди Каприо
# Джонни Депп
# Мэтт Деймон
# Sample Output:
# Леонардо Ди Каприо, 3
# Мэтт Деймон, 1

n = int(input())
text = ''
d = {}
for _ in range(n):
    text = input()
    d[text] = d.get(text, 0) + 1
max_key = max(d, key=lambda x: d[x])   # key = value, max ганяє цикл по value словника d і шукає набільше з них
# max_key = key with max value in dict
min_key = min(d, key=lambda y: d[y])
# В функциях min() и max() можно указать необязательный именной параметр key.
# Ему присваивается одноаргументная функция, которая выполняет какое-то предварительное действие над элементами списка.
print(f"{max_key}, {d[max_key]}")
print(f"{min_key}, {d[min_key]}")


# (2):
# n = int(input())
# text = ''
# d = {}
# for _ in range(n):
#     text = input()
#     key = text
#     if text not in d:
#         d[key] = 1
#     else:
#         d[key] = d[key] + 1
# maxx = max(d.values())
# minn = min(d.values())
# # print(maxx, minn)
# lst = []
# for key, val in d.items():
#     if val in (maxx, minn):
#         lst.append((val, key))
# # print(lst)
# lst_new = sorted(lst, reverse=True)
# # print(lst_new)
# for i in lst_new:
#     if len(lst_new) == 1:
#         print(i[1], i[0], sep=', ')
#         print(i[1], i[0], sep=', ')
#     else:
#         print(i[1], i[0], sep=', ')
